{
  "code": "import { ui } from \"./../ui/layaMaxUI\";\r\nvar Point = Laya.Point;\r\nvar Handler = laya.utils.Handler;\r\nimport { LbxQipan } from \"../game/LbxQipan\";\r\nimport { Qipan } from \"../game/QipanKuang\";\r\nimport { FKConfig } from \"../game/FKConfig\";\r\nimport { CommonUnitis } from \"../game/CommonUnitis\";\r\nexport default class GameUI extends ui.GameSceneUI {\r\n    constructor() {\r\n        super();\r\n        this.drapPoint = new Point();\r\n        this.checkFrameList = [];\r\n        this.checkFKlist = [];\r\n        this.isCanDrap = false;\r\n        this.dragNodes = [];\r\n        Laya.MouseManager.multiTouchEnabled = false;\r\n    }\r\n    onEnable() {\r\n        this.lbxQipan = LbxQipan.Default;\r\n        this.lbxQipan.init(this.box_qipan, this.box_bian);\r\n        this.GameStart();\r\n    }\r\n    GameStart() {\r\n        this.lbl_history_score.text = localStorage.getItem(\"HistoryScore\") || \"0\";\r\n        this.lbl_score.text = \"0\";\r\n        this.InitUI();\r\n    }\r\n    InitUI() {\r\n        this.scor.visible = false;\r\n        this.boxOver.visible = false;\r\n        this.box_drag.removeChildren();\r\n        for (let i = 0; i < this.lbxQipan.frameList.length; i++) {\r\n            this.lbxQipan.frameList[i].isHaveFK = false;\r\n        }\r\n        for (let i = 0; i < 3; i++) {\r\n            this.createLbxKuang(this[\"box\" + i]);\r\n        }\r\n        this.checkIsLose();\r\n    }\r\n    newOneK(randomIndex) {\r\n        let img = new laya.ui.Image();\r\n        img.skin = \"lbx/pics/color_\" + randomIndex + \".png\";\r\n        return img;\r\n    }\r\n    createLbxKuang(box, point = null) {\r\n        let qiPan = new Qipan();\r\n        var config = FKConfig.Default.getTheConfig();\r\n        var randomStyle = Math.floor(Math.random() * (config.length - 1));\r\n        var posList = config[randomStyle];\r\n        let randomIndex = Math.floor(Math.random() * 6 + 1);\r\n        var sumX = 0, countX = 0, sumY = 0, countY = 0;\r\n        if (point) {\r\n            box.x = point.x;\r\n            box.y = point.y;\r\n        }\r\n        box.removeChildren();\r\n        let node = new laya.ui.Box();\r\n        node.name = \"node\";\r\n        node.tag = posList;\r\n        for (var index = 0; index < posList.length; index++) {\r\n            var pos = posList[index];\r\n            var kuai = this.newOneK(randomIndex);\r\n            node.addChild(kuai);\r\n            kuai.x = pos.x;\r\n            kuai.y = pos.y;\r\n            sumY = kuai.y;\r\n        }\r\n        box.addChild(node);\r\n        node.x = (box.width - node.width) * .5;\r\n        node.y = (box.height - node.height) * .5 + (sumY > 0 ? 0 : Math.abs(sumY)) * 0.5;\r\n        box.scale(0.7, 0.7);\r\n        for (let childKuai of node._children) {\r\n            let kuaiPos = CommonUnitis.localToGlobal2(childKuai);\r\n            qiPan.kuangPoint = kuaiPos;\r\n        }\r\n        box.tag = qiPan;\r\n        return box;\r\n    }\r\n    checkIsLose() {\r\n        var count = 0;\r\n        for (var i = 0; i < 3; i++) {\r\n            var node = this[\"box\" + i].getChildByName(\"node\");\r\n            if (this.checkSelfIsLose(node)) {\r\n                count++;\r\n                node.alpha = .2;\r\n                this[\"box\" + i].off(laya.events.Event.MOUSE_DOWN, this, this.onMouseDown);\r\n            }\r\n            else {\r\n                node.alpha = 1;\r\n                this[\"box\" + i].once(laya.events.Event.MOUSE_DOWN, this, this.onMouseDown);\r\n            }\r\n        }\r\n        if (count == 3) {\r\n            Laya.timer.once(2000, this, this.sendSaveScore, []);\r\n        }\r\n    }\r\n    sendSaveScore(score) {\r\n        console.log(\">>>>\", this.lbl_score.text);\r\n    }\r\n    miniGameSaveScoreResult(data) {\r\n        if (data.resCode == 0) {\r\n            this.lbl_history_score.text = \"\" + data.maxScore;\r\n            this.txt_over.text = \"你已经输了\\n\\n当前得分:\" + this.lbl_score.text + \"\\n历史最高:\" + data.maxScore;\r\n            this.boxOver.visible = true;\r\n            this.btn_restart.once(Laya.Event.CLICK, this, this.onClick, [true]);\r\n            this.btn_return.once(Laya.Event.CLICK, this, this.onClick, [false]);\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    onClick(isRevive, event) {\r\n        if (isRevive) {\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    miniGameChanceResult(data) {\r\n        if (data.resCode == 0) {\r\n            this.boxOver.visible = false;\r\n            this.InitUI();\r\n        }\r\n        else {\r\n            this.boxOver.visible = false;\r\n            this.box_drag.removeChildren();\r\n        }\r\n    }\r\n    getItemInfoResult() {\r\n    }\r\n    checkSelfIsLose(node) {\r\n        var canDropCount = 0;\r\n        var children = node._children;\r\n        for (var i = 0; i < this.lbxQipan.frameList.length; i++) {\r\n            var frameNode = this.lbxQipan.frameList[i];\r\n            var srcPos = new Point(frameNode.x, frameNode.y);\r\n            var count = 1;\r\n            if (!frameNode.isHaveFK) {\r\n                for (var j = 1; j < children.length; j++) {\r\n                    var len = 27;\r\n                    var childPos = new Point(srcPos.x + children[j].x, srcPos.y + children[j].y);\r\n                    for (var k = 0; k < this.lbxQipan.frameList.length; k++) {\r\n                        var tFrameNode = this.lbxQipan.frameList[k];\r\n                        var dis = childPos.distance(tFrameNode.x, tFrameNode.y);\r\n                        if (dis <= len && !tFrameNode.isHaveFK) {\r\n                            count++;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (count == children.length) {\r\n                    canDropCount++;\r\n                }\r\n            }\r\n        }\r\n        if (canDropCount == 0) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    addScore(XCCount, isDropAdd = false) {\r\n        this.scoreJump(this.lbl_score, XCCount, isDropAdd, true);\r\n        if (!isDropAdd) {\r\n            if (XCCount != 0) {\r\n                let score = 0;\r\n                for (let i = 1; i <= XCCount; i++) {\r\n                    score += 2 * i;\r\n                }\r\n                this.upscore(score + 1);\r\n            }\r\n        }\r\n    }\r\n    getAddScoreCal(XCCount, isDropAdd = false) {\r\n        var x = XCCount + 1;\r\n        var addScoreCount = isDropAdd ? 1 : 2 * x;\r\n        return addScoreCount;\r\n    }\r\n    complete2(lbl, addScoreCount) {\r\n        this.lbl_score.text = (addScoreCount + Number(this.lbl_score.text)).toString();\r\n    }\r\n    scoreJump(lbl, XCCount, isDropAdd = false, isComplete = false) {\r\n        while (XCCount > 0 && isComplete) {\r\n            XCCount--;\r\n            isComplete = false;\r\n            var addScoreCount = this.getAddScoreCal(XCCount, isDropAdd);\r\n            this.lbl_score.text = (addScoreCount + Number(this.lbl_score.text)).toString();\r\n            Laya.timer.once(50, this, this.scoreJump, [this.lbl_score, XCCount, isDropAdd, true]);\r\n        }\r\n    }\r\n    onMouseDown(event) {\r\n        let box = event.target;\r\n        this.drapBox = box;\r\n        this.drapBox.once(laya.events.Event.DRAG_START, this, this.onDragStart);\r\n        this.drapBox.on(laya.events.Event.DRAG_MOVE, this, this.onDragMove);\r\n        this.drapBox.once(laya.events.Event.DRAG_END, this, this.onDragEnd);\r\n        this.drapBox.once(laya.events.Event.MOUSE_UP, this, this.onDragEnd);\r\n        box.scale(1, 1);\r\n        this.isCanDrap = true;\r\n        box.startDrag();\r\n    }\r\n    onDragStart(event) {\r\n        let box = this.drapBox;\r\n        this.drapPoint.x = box.x;\r\n        this.drapPoint.y = box.y;\r\n        this.curFKLen = this.drapBox.getChildByName(\"node\").numChildren;\r\n    }\r\n    onDragMove(event) {\r\n        this.checkCollision();\r\n    }\r\n    onDragEnd(event) {\r\n        if (!this.isCanDrap)\r\n            return;\r\n        let node = this.drapBox.getChildByName(\"node\");\r\n        let childs = node._children;\r\n        if (this.dragNodes.length == childs.length) {\r\n            let copyChilds = [];\r\n            for (let child of childs) {\r\n                copyChilds.push(child);\r\n            }\r\n            node.removeChildren();\r\n            for (let i = 0; i < this.dragNodes.length; i++) {\r\n                this.box_drag.addChild(copyChilds[i]);\r\n                copyChilds[i].name = \"Drag\" + this.dragNodes[i].FKindex;\r\n                copyChilds[i].x = this.dragNodes[i].x;\r\n                copyChilds[i].y = this.dragNodes[i].y;\r\n                this.box_bian.getChildByName(\"QipanBian\" + this.dragNodes[i].FKindex).visible = false;\r\n                this.dragNodes[i].isHaveFK = true;\r\n            }\r\n            this.dragNodes = [];\r\n            this.createLbxKuang(this.drapBox, this.drapPoint);\r\n            this.checkXC();\r\n        }\r\n        else {\r\n            if (this.drapBox.name == \"box0\")\r\n                laya.utils.Tween.to(this.drapBox, { x: 790, y: 20, scaleX: 0.7, scaleY: 0.7 }, 200);\r\n            else if (this.drapBox.name == \"box1\")\r\n                laya.utils.Tween.to(this.drapBox, { x: 790, y: 255, scaleX: 0.7, scaleY: 0.7 }, 200);\r\n            else if (this.drapBox.name == \"box2\")\r\n                laya.utils.Tween.to(this.drapBox, { x: 790, y: 490, scaleX: 0.7, scaleY: 0.7 }, 200);\r\n        }\r\n        this.checkIsLose();\r\n        this.isCanDrap = false;\r\n        this.drapBox.off(laya.events.Event.DRAG_MOVE, this, this.onDragMove);\r\n    }\r\n    upscore(pulsNum) {\r\n        this.scor.alpha = 1;\r\n        this.scor.y = 340;\r\n        this.scor.scale(1, 1);\r\n        this.scor.text = \"+\" + pulsNum;\r\n        this.scor.visible = true;\r\n        laya.utils.Tween.to(this.scor, { y: 240, alpha: 0.4, scaleX: 1.2, scaleY: 1.2 }, 1000, null, Handler.create(this, () => {\r\n            this.scor.visible = false;\r\n        }));\r\n    }\r\n    checkXC() {\r\n        this.addScore(this.curFKLen, true);\r\n        this.upscore(this.curFKLen);\r\n        var haveFKIndexList = [];\r\n        for (var i = 0; i < this.lbxQipan.frameList.length; i++) {\r\n            if (this.lbxQipan.frameList[i].isHaveFK) {\r\n                haveFKIndexList.push(this.lbxQipan.frameList[i].FKindex);\r\n            }\r\n        }\r\n        haveFKIndexList.sort(function (a, b) { return a - b; });\r\n        let xcList = [];\r\n        var disList = FKConfig.Default.disList;\r\n        for (let i = 0; i < disList.length; i++) {\r\n            let oneXCList = disList[i];\r\n            var intersectAry = CommonUnitis.get2AryIntersect(haveFKIndexList, oneXCList);\r\n            if (intersectAry.length > 0) {\r\n                var isXC = CommonUnitis.check2AryIsEqual(oneXCList, intersectAry);\r\n                if (isXC) {\r\n                    xcList.push(oneXCList);\r\n                }\r\n            }\r\n        }\r\n        var actionArr = [];\r\n        var count = 0;\r\n        for (var i = 0; i < xcList.length; i++) {\r\n            for (let j = 0; j < xcList[i].length; j++) {\r\n                let imgDrag = this.box_drag.getChildByName(\"Drag\" + xcList[i][j]);\r\n                let Kuang = this.box_qipan.getChildByName(\"QipanKuang\" + xcList[i][j]);\r\n                Kuang.isHaveFK = false;\r\n                Laya.Tween.to(imgDrag, { scaleX: 1.5, scaleY: 1.5, alpha: 0.5, }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, this.complete, [imgDrag]), 100);\r\n                count++;\r\n            }\r\n        }\r\n        this.addScore(count);\r\n    }\r\n    complete(bian) {\r\n        bian.removeSelf();\r\n    }\r\n    checkCollision() {\r\n        for (let i = 0; i < this.lbxQipan.frameList.length; i++) {\r\n            this.box_bian.getChildByName(\"QipanBian\" + i).visible = false;\r\n        }\r\n        let qiPan = this.box_qipan.tag;\r\n        this.dragNodes = [];\r\n        for (let posBox of this.drapBox.tag.kuangPoints) {\r\n            for (let posQipan of this.box_qipan.tag.kuangPoints) {\r\n                let posBox1 = new Point((this.drapBox.x + posBox.x), (this.drapBox.y + posBox.y));\r\n                if (posBox1.distance(posQipan.x, posQipan.y) <= 35) {\r\n                    let Kuang = this.box_qipan.getChildByName(\"QipanKuang\" + this.box_qipan.tag.getIndex(posQipan));\r\n                    if (Kuang.isHaveFK) {\r\n                        this.dragNodes = [];\r\n                        return;\r\n                    }\r\n                    this.dragNodes.push(Kuang);\r\n                }\r\n            }\r\n            if (this.dragNodes.length <= 0) {\r\n                return;\r\n            }\r\n        }\r\n        if (this.dragNodes.length == this.drapBox.tag.kuangPoints.length) {\r\n            for (let node of this.dragNodes) {\r\n                this.box_bian.getChildByName(\"QipanBian\" + node.FKindex).visible = true;\r\n            }\r\n        }\r\n    }\r\n    getDistance(p1, p2) {\r\n        var _x = Math.abs(p1.x - p2.x);\r\n        var _y = Math.abs(p1.y - p2.y);\r\n        return Math.sqrt(_x * _x + _y * _y);\r\n    }\r\n}\r\n",
  "references": [
    "E:/HarryNR/LayaDev/LayaLbx/src/ui/layaMaxUI.ts",
    "E:/HarryNR/LayaDev/LayaLbx/src/game/LbxQipan.ts",
    "E:/HarryNR/LayaDev/LayaLbx/src/game/QipanKuang.ts",
    "E:/HarryNR/LayaDev/LayaLbx/src/game/FKConfig.ts",
    "E:/HarryNR/LayaDev/LayaLbx/src/game/CommonUnitis.ts"
  ]
}
